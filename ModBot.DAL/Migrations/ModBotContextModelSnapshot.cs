// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModBot.DAL.Data;

namespace ModBot.DAL.Migrations
{
    [DbContext(typeof(ModBotContext))]
    partial class ModBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModBot.Domain.Models.BannedWord", b =>
                {
                    b.Property<int>("BannedWordUsedCount")
                        .HasColumnType("int");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Profanity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Punishment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Strikes")
                        .HasColumnType("int");

                    b.HasIndex("GuildId");

                    b.ToTable("BannedWord");
                });

            modelBuilder.Entity("ModBot.Domain.Models.Changelog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Changed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Changelog");
                });

            modelBuilder.Entity("ModBot.Domain.Models.Guild", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuildName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBot")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Guild");
                });

            modelBuilder.Entity("ModBot.Domain.Models.GuildPunishment", b =>
                {
                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("PunishmentId")
                        .HasColumnType("int");

                    b.HasKey("GuildId", "PunishmentId");

                    b.HasIndex("PunishmentId");

                    b.ToTable("GuildPunishment");
                });

            modelBuilder.Entity("ModBot.Domain.Models.Member", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBot")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("ModBot.Domain.Models.MemberPunishment", b =>
                {
                    b.Property<decimal>("MemberId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("PunishmentId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "PunishmentId");

                    b.HasIndex("PunishmentId");

                    b.ToTable("MemberPunishment");
                });

            modelBuilder.Entity("ModBot.Domain.Models.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StrikesAmount")
                        .HasColumnType("int");

                    b.Property<int>("TimeOutUntil")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Punishment");
                });

            modelBuilder.Entity("ModBot.Domain.Models.PunishmentSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BanLevel")
                        .HasColumnType("int");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<int>("KickLevel")
                        .HasColumnType("int");

                    b.Property<int>("SpamMuteTime")
                        .HasColumnType("int");

                    b.Property<int>("StrikeMuteTime")
                        .HasColumnType("int");

                    b.Property<int>("TimeOutLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("PunishmentsLevel");
                });

            modelBuilder.Entity("ModBot.Domain.Models.Statistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageNumberOfStrikes")
                        .HasColumnType("float");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<double>("MedianNumberOfStrikes")
                        .HasColumnType("float");

                    b.Property<int>("NumberOfBannedWords")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfMembers")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTimesBannedWordBeenUsed")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTimesEachCommandoBeenUsed")
                        .HasColumnType("int");

                    b.Property<int>("TotalStrikesInDatabase")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("ModBot.Domain.Models.BannedWord", b =>
                {
                    b.HasOne("ModBot.Domain.Models.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("ModBot.Domain.Models.GuildPunishment", b =>
                {
                    b.HasOne("ModBot.Domain.Models.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModBot.Domain.Models.Punishment", "Punishment")
                        .WithMany()
                        .HasForeignKey("PunishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("Punishment");
                });

            modelBuilder.Entity("ModBot.Domain.Models.MemberPunishment", b =>
                {
                    b.HasOne("ModBot.Domain.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModBot.Domain.Models.Punishment", "Punishment")
                        .WithMany()
                        .HasForeignKey("PunishmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Punishment");
                });

            modelBuilder.Entity("ModBot.Domain.Models.PunishmentSettings", b =>
                {
                    b.HasOne("ModBot.Domain.Models.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("ModBot.Domain.Models.Statistics", b =>
                {
                    b.HasOne("ModBot.Domain.Models.Guild", "Guild")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });
#pragma warning restore 612, 618
        }
    }
}
